geom_line(size=1.5, aes(color=Indv_Family)) +
geom_line(data=final_PIT_df, aes(x=Year_of_service, y=n, group=Indv_Family, color=measures)) +
xlab("Year of Service") +
ylab("Number Serviced") +
ggtitle('Number of People Serviced vs Number Reported in Durham PIT Count')
})
```
##Conclusion
The number of individuals serviced by UMD and the reported number of homeless individuals in Durham County was relatively consistent as opposed to the significant gap in the number of families that are serviced by UMD and the number of reported homeless families in Durham County.  UMD services a high number of families, equating to about double the amount of individuals it services and nearly three times more families than reported in the PIT survey.  Yet, UMD provides shelter for a maximum of nine families at a time, compared to the maximum of one hundred fifteen for homeless individuals.
More accurate representation of families in the PIT survey would allow Urban Ministries to quantify their impact on the Durham community and advocate for more resources to ensure all that need assistance, recieve assistance.  Resources and iniatives should be centered around reliable data that allows for sound decision making.  Unfortunately, the PIT survey does not provide that for homeless families.
My recommendation for HUD would be to integrate more of the homeless community and service providers in its surveying process. This can be achieved by hiring people from the homeless community to assist in gathering talleys and partnering with service providers to assess the most viable approaches to collect these data.  Additionally, registration captured at time of service could assist in supplementing the yearly survey.
#More on PIT
The annual PIT counts often mobilize large numbers of volunteers and serve to educate communities about homelessness. However, despite all the community effort and goodwill that goes into them, and due to no fault of the professionals and volunteers who carry them out, the counts are severely flawed. A 2001 study using administrative data collected from homeless service providers estimated that the annual number of homeless individuals is 2.5 to 10.2 times greater than can be obtained using a point in time count.  This is due to:
+Inconsistent Methodlogy
+Most methodologies miss unsheltered homeless people
+Only some kinds of homelessness are counted. Excludes people living with familly member, in jail, or hospitalized
See "HUD-PIT-report2017.pdf" in references folder to continue reading more on the PIT survey.
#Limitations
+Current PIT count data must always be used with the explicit recognition that the data represent significant undercounts.
+Usage of year-to-year trends must include scrutiny of any methodology or classification changes that may have also occurred over the time period.
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = Race, fill = VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#veteranstatus_race_plot
veteranstatus_race_plot
disability_plot = ggplot(disability_df, aes(x = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#disability_plot
disability_plot
disability_plot = ggplot(disability_df, aes(x = DisabilityType, color=DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
disability_plot = ggplot(disability_df, aes(x = DisabilityType, color=DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
disability_plot = ggplot(disability_df, aes(x = DisabilityType, color=DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
disability_plot
disability_plot = ggplot(disability_df, aes(x = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
disability_plot
disability_plot = ggplot(disability_df, aes(x = DisabilityType, fill = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#disability_plot
#disability_plot
disability_plot = ggplot(disability_df, aes(x = DisabilityType)) +
geom_bar(fill = DisabilityType) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#load master data file
disability_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/disability.csv", na = 'NaN')
#disability_df
disability_plot = ggplot(disability_df, aes(x = DisabilityType)) +
geom_bar(fill = DisabilityType) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#disability_plot
disability_plot = ggplot(disability_df, aes(x = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_minimal()
disability_plot
disability_plot = ggplot(disability_df, aes(x = DisabilityType, fill = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme_minimal()
#disability_plot
disability_plot
disability_plot = ggplot(disability_df, aes(x = DisabilityType, color = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
disability_plot = ggplot(disability_df, aes(x = DisabilityType, color = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
disability_plot
disability_df
disability_plot = ggplot(disability_df, aes(x = DisabilityType, color = DisabilityType)) +
geom_bar()
disability_plot
disability_plot = ggplot(disability_df, aes(x = DisabilityType, fill() = DisabilityType)) +
geom_bar()
disability_plot = ggplot(disability_df, aes(x = DisabilityType, fill = DisabilityType)) +
geom_bar()
disability_plot = ggplot(disability_df, aes(x = DisabilityType, fill = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
disability_plot
veteranstatus_gender_df = master_df %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(Gender %in% c("Female","Male","Trans Female (MTF or Male to Female"))
library(tidyverse)
library(dplyr)
library(stringr)
#load master data file
master_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/master.csv", na = 'NaN')
#Create datasets to understand veteran demographics----------------------------------------------------------------------------------------------
#---veteran status by gender
veteranstatus_gender_df = master_df %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(Gender %in% c("Female","Male","Trans Female (MTF or Male to Female"))
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = Race, fill = VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
library(tidyverse)
library(dplyr)
library(stringr)
#load master data file
master_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/master.csv", na = 'NaN')
#Create datasets to understand veteran demographics----------------------------------------------------------------------------------------------
#---veteran status by gender
veteranstatus_gender_df = master_df %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(Gender %in% c("Female","Male","Trans Female (MTF or Male to Female"))
#veteranstatus_gender_df
veteranstatus_gender_plot = ggplot(veteranstatus_gender_df, aes(x = Gender, fill = VeteranStatus)) +
geom_bar()
#veteranstatus_gender_plot
#---veteran status by Race
veteranstatus_race_df = master_df %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(Race %in% c("White (HUD)",
"Black or African American (HUD)",
"American Indian or Alaska Native (HUD)",
"Asian (HUD)",
"Native Hawaiian or Other Pacific Islander (HUD)",
"Client doesnt know (HUD)",
"Data not collected (HUD)",
"Client refused (HUD)")
)
#veteranstatus_race_df
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = Race, fill = VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
#veteranstatus_race_plot
veteranstatus_race_plot
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = Race, fill = VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
#veteranstatus_race_plot
ggsave('veteranstatus_race_plot', height=3, width=5)
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
install.packages("datasets")
library(tidyverse)
library(dplyr)
library(stringr)
install.packages("datasets")
#load master data file
master_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/master.csv", na = 'NaN')
#Create datasets to understand veteran demographics----------------------------------------------------------------------------------------------
#---veteran status by gender
veteranstatus_gender_df = master_df %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(Gender %in% c("Female","Male","Trans Female (MTF or Male to Female"))
#veteranstatus_gender_df
veteranstatus_gender_plot = ggplot(veteranstatus_gender_df, aes(x = Gender, fill = VeteranStatus)) +
geom_bar()
#veteranstatus_gender_plot
#---veteran status by Race
veteranstatus_race_df = master_df %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(Race %in% c("White (HUD)",
"Black or African American (HUD)",
"American Indian or Alaska Native (HUD)",
"Asian (HUD)",
"Native Hawaiian or Other Pacific Islander (HUD)",
"Client doesnt know (HUD)",
"Data not collected (HUD)",
"Client refused (HUD)")
)
#veteranstatus_race_df
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = Race, fill = VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
#veteranstatus_race_plot
ggsave('veteranstatus_race_plot', height=3, width=5)
install.packages("datasets")
#load master data file
master_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/master.csv", na = 'NaN')
#Create datasets to understand veteran demographics----------------------------------------------------------------------------------------------
#---veteran status by gender
veteranstatus_gender_df = master_df %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(Gender %in% c("Female","Male","Trans Female (MTF or Male to Female"))
#veteranstatus_gender_df
veteranstatus_gender_plot = ggplot(veteranstatus_gender_df, aes(x = Gender, fill = VeteranStatus)) +
geom_bar()
#veteranstatus_gender_plot
#---veteran status by Race
veteranstatus_race_df = master_df %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(Race %in% c("White (HUD)",
"Black or African American (HUD)",
"American Indian or Alaska Native (HUD)",
"Asian (HUD)",
"Native Hawaiian or Other Pacific Islander (HUD)",
"Client doesnt know (HUD)",
"Data not collected (HUD)",
"Client refused (HUD)")
)
#veteranstatus_race_df
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = Race, fill = VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
#veteranstatus_race_plot
ggsave('veteranstatus_race_plot', height=3, width=5)
library(ggplot2)
#load master data file
master_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/master.csv", na = 'NaN')
#Create datasets to understand veteran demographics----------------------------------------------------------------------------------------------
#---veteran status by gender
veteranstatus_gender_df = master_df %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(Gender %in% c("Female","Male","Trans Female (MTF or Male to Female"))
#veteranstatus_gender_df
veteranstatus_gender_plot = ggplot(veteranstatus_gender_df, aes(x = Gender, fill = VeteranStatus)) +
geom_bar()
#veteranstatus_gender_plot
#---veteran status by Race
veteranstatus_race_df = master_df %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(Race %in% c("White (HUD)",
"Black or African American (HUD)",
"American Indian or Alaska Native (HUD)",
"Asian (HUD)",
"Native Hawaiian or Other Pacific Islander (HUD)",
"Client doesnt know (HUD)",
"Data not collected (HUD)",
"Client refused (HUD)")
)
#veteranstatus_race_df
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = Race, fill = VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
#veteranstatus_race_plot
ggsave('veteranstatus_race_plot', height=3, width=5)
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = Race, fill = VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
#veteranstatus_race_plot
ggsave('veteranstatus_race_plot.png', height=3, width=5)
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = Race, fill = VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
#veteranstatus_race_plot
ggsave('veteranstatus_race_plot.png', height=3, width=5)
veteranstatus_age_df = master_df %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
drop_na(Age)
#veteranstatus_age_df
veteranstatus_age_plot = ggplot(veteranstatus_age_df, aes(x = VeteranStatus, y = Age)) +
geom_boxplot()
#veteranstatus_age_plot
max_Age = master_df %>%
drop_na(Age) %>%
summarise(find_max_age = max(Age))
#max_Age
min_Age = master_df %>%
drop_na(Age) %>%
summarise(find_min_age = min(Age))
#min_Age
veteranstatus_age_plot
#load master data file
disability_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/disability_pivot.csv", na = 'NaN')
#disability_df
disability_plot = ggplot(disability_df, aes(x = DisabilityType, fill = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
theme_minimal()
#disability_plot
disability_plot
disability_plot = ggplot(disability_df, aes(x = DisabilityType, fill = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
theme_minimal()
disability_plot
ggplot(disability_df, aes(x = DisabilityType, fill = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
theme_minimal()
disability_master_df = inner_join(disability_pivot_df, master_df, by = c("ClientID" = "ClientID"), suffix = c(".x", ".y")) %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)"))
disability_master_df = inner_join(disability_df, master_df, by = c("ClientID" = "ClientID"), suffix = c(".x", ".y")) %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)"))
#disability_master_df
disability_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/disability_pivot.csv", na = 'NaN')
#disability_df
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = Race, fill = VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
veteranstatus_race_plot
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = Race, fill = VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 35, hjust = 1))
veteranstatus_race_plot
#load master data file
disability_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/disability_pivot.csv", na = 'NaN')
#disability_df
disability_plot = ggplot(disability_df, aes(x = DisabilityType, fill = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 35, hjust = 1))
#load master data file
disability_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/disability_pivot.csv", na = 'NaN')
#disability_df
disability_plot = ggplot(disability_df, aes(x = DisabilityType, fill = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 35, hjust = 1)) +
theme_minimal()
disability_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/disability_pivot.csv", na = 'NaN')
#disability_df
disability_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/disability_pivot.csv", na = 'NaN')
#disability_df
disability_plot = ggplot(disability_df, aes(x = DisabilityType, fill = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 35, hjust = 1)) +
theme_minimal()
disability_plot
disability_master_df = inner_join(disability_df, master_df, by = c("ClientID" = "ClientID"), suffix = c(".x", ".y")) %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)"))
disability_master_plot = ggplot(disability_master_df, aes(x = DisabilityType, fill=VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
disability_master_plot
#load master data file
disability_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/disability_pivot.csv", na = 'NaN') %>%
DisabilityType = as.factor(c("Alcohol Abuse (HUD)"
,"Both Alcohol and Drug Abuse (HUD)"
,"Chronic Health Condition (HUD)"
,"Developmental (HUD)",
"Drug Abuse (HUD)",
"HIV/AIDS (HUD)"
,"Mental Health Problem (HUD)"
,"Other"
,"Other: Learning,Physical (HUD)"
,"Physical/Medical"
,"Vision Impaired"))
#load master data file
disability_read_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/disability_pivot.csv", na = 'NaN') %>%
disability_read_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/disability_pivot.csv", na = 'NaN')
disability_df <- tidyr::gather(disability_read_df, key = ClientID, value = DisabilityType)
disability_read_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/disability_pivot.csv", na = 'NaN')
disability_df <- tidyr::gather(disability_read_df, key = ClientID, value = DisabilityType)
disability_plot = ggplot(disability_df, aes(x = DisabilityType, fill = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 35, hjust = 1)) +
theme_minimal()
disability_plot = ggplot(disability_df, aes(x = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 35, hjust = 1))
disability_plot
disability_plot = ggplot(disability_df, aes(x = DisabilityType)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 35, hjust = 1))
disability_plot
ggplot(disability_df, aes(x = DisabilityType)) +
geom_bar()
disability_df
view(disability_df)
disability_df <- tidyr::gather(disability_read_df, key = DisabilityType, value = count(ClientID))
disability_df <- tidyr::gather(disability_read_df, key = DisabilityType, value = ClientID)
view(disability_df)
master_new_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/master_new.csv", na = '***')
view(master_new_df)
veteranstatus_gender_df = master_new_df %>%
filter(VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(Gender %in% c("Female","Male","Trans Female (MTF or Male to Female"))
#veteranstatus_gender_df
veteranstatus_gender_df = master_new_df %>%
filter(client.VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(client.Gender %in% c("Female","Male","Trans Female (MTF or Male to Female"))
#veteranstatus_gender_df
veteranstatus_gender_df
veteranstatus_gender_plot = ggplot(veteranstatus_gender_df, aes(x = Gender, fill = client.VeteranStatus)) +
geom_bar()
veteranstatus_gender_plot
veteranstatus_gender_plot = ggplot(veteranstatus_gender_df, aes(x = client.Gender, fill = client.VeteranStatus)) +
geom_bar()
veteranstatus_gender_plot
veteranstatus_gender_plot = ggplot(veteranstatus_gender_df, aes(x = client.Gender, fill = client.VeteranStatus)) +
geom_bar() +
xlab = 'Gender' +
ylab = 'Veteran Status'
veteranstatus_gender_plot = ggplot(veteranstatus_gender_df, aes(x = client.Gender, fill = client.VeteranStatus)) +
geom_bar() +
xlab("Gender") +
ylab("Veteran Status")
veteranstatus_gender_plot
veteranstatus_gender_df
view(veteranstatus_gender_df)
veteranstatus_gender_df = master_new_df %>%
filter(client.VeteranStatus %in% c("Yes (HUD)","No (HUD)"))
veteranstatus_gender_plot = ggplot(veteranstatus_gender_df, aes(x = client.Gender, fill = client.VeteranStatus)) +
geom_bar() +
xlab("Gender") +
ylab("Veteran Status")
veteranstatus_gender_plot
view(veteranstatus_gender_df)
veteranstatus_gender_df = master_new_df %>%
filter(client.VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(client.Gender %in% c("Female","Male","Trans Female (MTF or Male to Female)"))
veteranstatus_gender_plot = ggplot(veteranstatus_gender_df, aes(x = client.Gender, fill = client.VeteranStatus)) +
geom_bar() +
xlab("Gender") +
ylab("Veteran Status")
veteranstatus_gender_plot
veteranstatus_race_df = master_new_df %>%
filter(client.VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(client.Race %in% c("White (HUD)",
"Black or African American (HUD)",
"American Indian or Alaska Native (HUD)",
"Asian (HUD)",
"Native Hawaiian or Other Pacific Islander (HUD)",
"Client doesnt know (HUD)",
"Data not collected (HUD)",
"Client refused (HUD)")
veteranstatus_race_df = master_new_df %>%
filter(client.VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(client.Race %in% c("White (HUD)",
"Black or African American (HUD)",
"American Indian or Alaska Native (HUD)",
"Asian (HUD)",
"Native Hawaiian or Other Pacific Islander (HUD)",
"Client doesnt know (HUD)",
"Data not collected (HUD)",
"Client refused (HUD)")
)
veteranstatus_race_df = master_new_df %>%
filter(client.VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
filter(client.Race %in% c("White (HUD)",
"Black or African American (HUD)",
"American Indian or Alaska Native (HUD)",
"Asian (HUD)",
"Native Hawaiian or Other Pacific Islander (HUD)",
"Client doesnt know (HUD)",
"Data not collected (HUD)",
"Client refused (HUD)")
)
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = Race, fill = client.VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 35, hjust = 1))
veteranstatus_race_plot
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = client.Race, fill = client.VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 35, hjust = 1))
veteranstatus_race_plot
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = client.Race, fill = client.VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 41, hjust = 1))
veteranstatus_race_plot
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = client.Race, fill = client.VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
#veteranstatus_race_plot
veteranstatus_race_plot
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = client.Race, fill = client.VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 55, hjust = 1))
#veteranstatus_race_plot
veteranstatus_race_plot
veteranstatus_numberofdisabilities_plot = ggplot(veteranstatus_gender_df, aes(x = TotalNumberofDisabilities, fill = client.VeteranStatus)) +
geom_bar() +
xlab("Gender") +
ylab("Veteran Status")
veteranstatus_numberofdisabilities_plot
veteranstatus_age_df = master_new_df %>%
filter(client.VeteranStatus %in% c("Yes (HUD)","No (HUD)")) %>%
drop_na(client.Age)
veteranstatus_age_plot = ggplot(veteranstatus_age_df, aes(x = client.VeteranStatus, y = client.Age)) +
geom_boxplot()
#veteranstatus_age_plot
veteranstatus_age_plot
veteranstatus_race_plot
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = client.Race, fill = client.VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 55, hjust = 1))
xlab("Veteran Status")
veteranstatus_race_plot
veteranstatus_race_plot = ggplot(veteranstatus_race_df, aes(x = client.Race, fill = client.VeteranStatus)) +
geom_bar() +
theme(axis.text.x = element_text(angle = 55, hjust = 1)) +
xlab("Veteran Status")
veteranstatus_race_plot
veteranstatus_numberofdisabilities_plot = ggplot(master_new_df, aes(x = client.VeteranStatus, y = TotalNumofDisabilities)) +
geom_boxplot()
veteranstatus_numberofdisabilities_plot
veteranstatus_numberofdisabilities = master_new_df %>%
filter(client.VeteranStatus %in% c("Yes (HUD)","No (HUD)"))
veteranstatus_numberofdisabilities_plot = ggplot(veteranstatus_numberofdisabilities, aes(x = client.VeteranStatus, y = TotalNumofDisabilities)) +
geom_boxplot()
veteranstatus_numberofdisabilities_plot
gather(master_new_df, key = "DisabilityType", value = "YesorNo",
mClient.clientid,-MaxAge,-client.Age,-client.Ethnicity,-client.Gender,-client.Race,-ClientID,'AlcoholAbuse(HUD)')
master_new_gather_df = gather(master_new_df, key = "DisabilityType", value = "YesorNo",
mClient.clientid,-MaxAge,-client.Age,-client.Ethnicity,-client.Gender,-client.Race,-ClientID,'AlcoholAbuse(HUD)')
master_new_gather_df
library(tidyverse)
library(dplyr)
library(stringr)
library(ggplot2)
#load master data file
master_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/master.csv", na = 'NaN')
#load master data file
master_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/master.csv", na = 'NaN')
library(tidyverse)
library(dplyr)
library(stringr)
library(ggplot2)
#load master data file
master_df = read_csv("https://raw.githubusercontent.com/datasci611/bios611-projects-fall-2019-mlfoste1/master/Project_3/data/master.csv", na = 'NaN')
