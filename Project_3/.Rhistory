group_UMD_df = final_UMD_df %>%
group_by(Client_File_Number) %>%
filter(Food_Provided_for > 0, Food_Provided_for <= 10)  %>%
summarise(max_Food_Provided_for = max(Food_Provided_for)) %>%
drop_na(max_Food_Provided_for)
str(group_UMD_df)
group_UMD_df$Family_Size <- cut(group_UMD_df$max_Food_Provided_for, breaks = c(0,1,2,3,4,5,6,7,10), labels=c("Individual","2","3","4","5","6","7","8+"))
group_UMD_df$Indv_Family <- cut(group_UMD_df$max_Food_Provided_for, breaks = c(0,1,10), labels=c("Individual","Family"))
view(group_UMD_df)
view(group_UMD_df)
ggplot(group_UMD_df, aes(x=Family_Size)) +
geom_bar(aes(fill=Family_Size)) +
xlab("Family Size") +
ggtitle('Counts by Family Size (2007-2016)')
ggplot(group_UMD_df, aes(x=Indv_Family), group = Indv_Family) +
geom_bar(aes(fill=Indv_Family)) +
xlab("Family Size") +
ggtitle('Individuals Versus Families (2007-2016)')
family_size_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Family_Size, Year_of_Service) %>%
drop_na(Food_Provided_for)  %>%
summarise(n_distinct(Client_File_Number))
view(family_size_group_UMD_df)
family_size_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Family_Size, Year_of_Service) %>%
drop_na(Food_Provided_for)  %>%
summarise(n_distinct(Client_File_Number))
family_size_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Family_Size, Year_of_Service) %>%
drop_na(max_Food_Provided_for)  %>%
summarise(n_distinct(Client_File_Number))
ggplot(family_size_group_UMD_df, aes(x=Year_of_Service, y=n, group=Family_Size)) +
geom_line(aes(color=Family_Size)) +
xlab("Year_of_Service") +
ggtitle('Total Number Services by Family Size by Year')
Indv_Family_group_UMD_df = full_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Indv_Family, Year_of_Service) %>%
count(Indv_Family)
group_UMD_df$Family_Size <- cut(group_UMD_df$max_Food_Provided_for, breaks = c(0,1,2,3,4,5,6,7,10), labels=c("Individual","2","3","4","5","6","7","8+"))
group_UMD_df$Indv_Family <- cut(group_UMD_df$max_Food_Provided_for, breaks = c(0,1,10), labels=c("Individual","Family"))
family_size_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Family_Size, Year_of_Service) %>%
drop_na(max_Food_Provided_for)  %>%
drop_na(Indv_Family)  %>%
summarise(n_distinct(Client_File_Number))
ggplot(family_size_group_UMD_df, aes(x=Year_of_Service, y=n, group=Family_Size)) +
geom_line(aes(color=Family_Size)) +
xlab("Year_of_Service") +
ggtitle('Total Number Services by Family Size by Year')
Indv_Family_group_UMD_df = full_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Indv_Family, Year_of_Service) %>%
count(Indv_Family)
view(family_size_group_UMD_df)
str(group_UMD_df)
View(group_UMD_df)
family_size_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Family_Size, Year_of_Service) %>%
summarise(n_distinct(Client_File_Number))
ggplot(family_size_group_UMD_df, aes(x=Year_of_Service, y=n, group=Family_Size)) +
geom_line(aes(color=Family_Size)) +
xlab("Year_of_Service") +
ggtitle('Total Number Services by Family Size by Year')
ggplot(family_size_group_UMD_df, aes(x=Year_of_Service, y=n, group=Family_Size)) +
geom_line(aes(color=Family_Size))
ggplot(family_size_group_UMD_df, aes(x=Year_of_Service, y=n, group=Family_Size))
ggplot(family_size_group_UMD_df, aes(x=Year_of_Service, y=n, group=Family_Size)) +
geom_line(aes(color=Family_Size)) +
scale_x_discrete() +
xlab("Year_of_Service") +
ggtitle('Total Number Services by Family Size by Year')
ggplot(group_UMD_df, aes(x=Year_of_Service, y=n, group=Indv_Family)) +
geom_line(size=1.5, aes(color=Indv_Family)) +
geom_line(data=final_PIT_df, aes(x=Year_of_service, y=n, group=Indv_Family, color=measures)) +
xlab("Year of Service") +
ylab("Number Serviced") +
ggtitle('Number of People Serviced vs Number Reported in Durham PIT Count')
ggplot(group_UMD_df, aes(x=Year_of_service, y=n, group=Indv_Family)) +
geom_line(size=1.5, aes(color=Indv_Family)) +
geom_line(data=final_PIT_df, aes(x=Year_of_service, y=n, group=Indv_Family, color=measures)) +
xlab("Year of Service") +
ylab("Number Serviced") +
ggtitle('Number of People Serviced vs Number Reported in Durham PIT Count')
Indv_Family_group_UMD_df = full_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Indv_Family, Year_of_Service) %>%
count(Indv_Family)
Indv_Family_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Indv_Family, Year_of_Service) %>%
count(Indv_Family)
ggplot(Indv_Family_group_UMD_df, aes(x=Year_of_Service, y=n, group=Indv_Family)) +
geom_line(aes(color=Indv_Family)) +
scale_x_discrete() +
xlab("Year_of_Service") +
ylab("Number Serviced") +
ggtitle('Individual vs Family by Year')
Indv_Family_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Indv_Family, Year_of_Service) %>%
drop_na(food_provided_for)  %>%
count(Indv_Family)
Indv_Family_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Indv_Family, Year_of_Service) %>%
drop_na(Food_Provided_for)  %>%
count(Indv_Family)
ggplot(Indv_Family_group_UMD_df, aes(x=Year_of_Service, y=n, group=Indv_Family)) +
geom_line(aes(color=Indv_Family)) +
scale_x_discrete() +
xlab("Year_of_Service") +
ylab("Number Serviced") +
ggtitle('Individual vs Family by Year')
view(family_size_group_UMD_df)
family_size_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Family_Size, Year_of_Service) %>%
summarise(n_distinct(Client_File_Number))
view(family_size_group_UMD_df)
#view by each family size
family_size_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Family_Size, Year_of_Service) %>%
summarise(n=n_distinct(Client_File_Number))
ggplot(family_size_group_UMD_df, aes(x=Year_of_Service, y=n, group=Family_Size)) +
geom_line(aes(color=Family_Size)) +
scale_x_discrete() +
xlab("Year_of_Service") +
ggtitle('Total Number Services by Family Size by Year')
#Total Number Services by Family Size by Year
ggplot(family_size_group_UMD_df, aes(x=Year_of_Service, y=n, group=Family_Size)) +
geom_line(aes(color=Family_Size)) +
scale_x_discrete() +
xlab("Year_of_Service") +
ylab("Number Serviced") +
ggtitle('Total Number Services by Family Size by Year')
Indv_Family_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Indv_Family, Year_of_Service) %>%
summarise(n=n_distinct(Client_File_Number))
ggplot(Indv_Family_group_UMD_df, aes(x=Year_of_Service, y=n, group=Indv_Family)) +
geom_line(aes(color=Indv_Family)) +
scale_x_discrete() +
xlab("Year_of_Service") +
ylab("Number Serviced") +
ggtitle('Individual vs Family by Year')
ggplot(group_UMD_df, aes(x=Year_of_service, y=n, group=Indv_Family)) +
geom_line(size=1.5, aes(color=Indv_Family)) +
geom_line(data=final_PIT_df, aes(x=Year_of_service, y=n, group=Indv_Family, color=measures)) +
xlab("Year of Service") +
ylab("Number Serviced") +
ggtitle('Number of People Serviced vs Number Reported in Durham PIT Count')
ggplot(group_UMD_df, aes(x=Year_of_service, y=n, group=Indv_Family)) +
geom_line(size=1.5, aes(color=Indv_Family)) +
geom_line(data=final_PIT_df, aes(x=Year_of_service, y=n, group=Indv_Family, color=measures)) +
xlab("Year of Service") +
ylab("Number Serviced") +
ggtitle('Number of People Serviced vs Number Reported in Durham PIT Count')
ggplot(group_UMD_df, aes(x=Year_of_service, y=n, group=Indv_Family)) +
geom_line(size=1.5, aes(color=Indv_Family)) +
geom_line(data=final_PIT_df, aes(x=Year_of_service, y=n, group=Indv_Family, color=measures)) +
xlab("Year of Service") +
ylab("Number Serviced") +
ggtitle('Number of People Serviced vs Number Reported in Durham PIT Count')
view(Durham_PIT_df)
final_PIT_df = Durham_PIT_df %>%
select('year','measures','count_') %>%
filter(measures=="Homeless Individuals" | measures=="Homeless People in Families") %>%
mutate(Year_of_service = as.factor(Durham_PIT_df$year))
final_PIT_df = Durham_PIT_df %>%
select('year','measures','count_') %>%
filter(measures=="Homeless Individuals" | measures=="Homeless People in Families") %>%
mutate(Year_of_service = as.factor(Durham_PIT_df$year))
final_PIT_df = Durham_PIT_df %>%
select('year','measures','count_') %>%
filter(measures=="Homeless Individuals" | measures=="Homeless People in Families")
final_PIT_df$Indv_Family<-NA
final_PIT_df$Indv_Family[final_PIT_df$measures=="Homeless Individuals"] <- "Individual"
final_PIT_df$Indv_Family[final_PIT_df$measures=="Homeless People in Families"] <- "Family"
final_PIT_df$Year_of_service <- cut(final_PIT_df$year, breaks = c(2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016), labels=c("2007","2008","2009","2010","2011","2012","2013","2014","2015","2016"))
final_PIT_df$n <- as.numeric(final_PIT_df$count_)
ggplot(final_PIT_df, aes(x=Indv_Family, y=n)) +
geom_bar(stat="identity", aes(fill=Indv_Family)) +
xlab("Family Size") +
ggtitle('Durham PIT - Individuals Versus Families (2007-2016)')
ggplot(final_PIT_df, aes(x=Year_of_service, y=n, group=Indv_Family)) +
geom_line(aes(color=Indv_Family)) +
scale_x_discrete() +
xlab("Year_of_Service") +
ggtitle('Durham PIT - Total Number Services by Family Size by Year')
ggplot(group_UMD_df, aes(x=Year_of_service, y=n, group=Indv_Family)) +
geom_line(size=1.5, aes(color=Indv_Family)) +
geom_line(data=final_PIT_df, aes(x=Year_of_service, y=n, group=Indv_Family, color=measures)) +
xlab("Year of Service") +
ylab("Number Serviced") +
ggtitle('Number of People Serviced vs Number Reported in Durham PIT Count')
ggplot(group_UMD_df, aes(x=Year_of_service, y=n, group=Indv_Family)) +
geom_line(size=1.5, aes(color=Indv_Family))
ggplot(group_UMD_df, aes(x=Year_of_Service, y=n, group=Indv_Family)) +
geom_line(size=1.5, aes(color=Indv_Family))
View(group_UMD_df)
ggplot(Indv_Family_group_UMD_df, aes(x=Year_of_Service, y=n, group=Indv_Family)) +
geom_line(size=1.5, aes(color=Indv_Family)) +
geom_line(data=final_PIT_df, aes(x=Year_of_service, y=n, group=Indv_Family, color=measures)) +
xlab("Year of Service") +
ylab("Number Serviced") +
ggtitle('Number of People Serviced vs Number Reported in Durham PIT Count')
view(Indv_Family_group_UMD_df)
Indv_Family_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Indv_Family, Year_of_Service) %>%
summarise(n=n_distinct(Client_File_Number))
view(Indv_Family_group_UMD_df)
ggplot(Indv_Family_group_UMD_df, aes(x=Indv_Family, y=n)) +
geom_bar(stat="identity", aes(fill=Indv_Family)) +
geom_bar(data=final_PIT_df, aes(x=Indv_Family, y=n, fill=measures))
ggplot(Indv_Family_group_UMD_df, aes(x=Indv_Family, y=n)) +
geom_bar(stat="identity", aes(fill=Indv_Family)) +
geom_bar(data=final_PIT_df, aes(x=Indv_Family, fill=measures))
ggplot(Indv_Family_group_UMD_df, aes(x=Indv_Family)) +
geom_bar(stat="identity", aes(fill=Indv_Family)) +
geom_bar(data=final_PIT_df, aes(x=Indv_Family, fill=measures))
ggplot(Indv_Family_group_UMD_df, aes(x=Indv_Family, y=n)) +
geom_bar(stat="identity", aes(fill=Indv_Family))
ggplot(Indv_Family_group_UMD_df, aes(x=Indv_Family, y=n)) +
geom_bar(stat="identity", aes(fill=Indv_Family)) +
geom_bar(data=final_PIT_df, aes(x=Indv_Family, fill=measures))
ggplot(Indv_Family_group_UMD_df, aes(x=Indv_Family, y=n)) +
geom_bar(stat="identity", aes(fill=Indv_Family)) +
geom_bar(data=final_PIT_df, stat="identity", aes(x=Indv_Family, fill=measures))
ggplot(Indv_Family_group_UMD_df, aes(x=Indv_Family, y=n)) +
geom_bar(stat="identity", aes(fill=Indv_Family)) +
geom_bar(data=final_PIT_df, stat="identity", aes(x=measures, fill=Indv_Family))
ggplot(group_UMD_df, aes(x=Indv_Family, y=n)) +
geom_bar(stat="identity", aes(fill=Indv_Family)) +
geom_bar(data=final_PIT_df, stat="identity", aes(x=measures, fill=Indv_Family))
xlab("Family Size") +
ggtitle('Individuals Versus Families (2007-2016)')
ggplot(group_UMD_df, aes(x=Indv_Family, y=n)) +
geom_bar(stat="identity", aes(fill=Indv_Family)) +
geom_bar(data=final_PIT_df, stat="identity", aes(x=measures, fill=Indv_Family)) +
xlab("Family Size") +
ggtitle('Individuals Versus Families (2007-2016)')
ggplot(group_UMD_df, aes(x=Indv_Family, y=n)) +
geom_bar(stat="identity", aes(fill=Indv_Family)) +
geom_bar(data=final_PIT_df, stat="identity", aes(x=measures, fill=Indv_Family)) +
xlab("Family Size") +
ggtitle('Individuals Versus Families (2007-2016)')
ggplot(group_UMD_df, aes(x=Indv_Family, y=n)) +
geom_bar(stat="identity", aes(fill=Indv_Family))
ggplot(group_UMD_df, aes(x=Indv_Family, y=n, group = Indv_Family)) +
geom_bar(stat="identity", aes(fill=Indv_Family))
ggplot(group_UMD_df, aes(x=Indv_Family), group = Indv_Family) +
geom_bar(aes(fill=Indv_Family))
ggplot(group_UMD_df, aes(x=Indv_Family), group = Indv_Family) +
geom_bar(aes(fill=Indv_Family)) +
geom_bar(data=final_PIT_df, stat="identity", aes(x=measures, fill=Indv_Family)) +
xlab("Family Size") +
ggtitle('Individuals Versus Families (2007-2016)')
ggplot(group_UMD_df, aes(x=Indv_Family), group = Indv_Family) +
geom_bar(aes(fill=Indv_Family)) +
geom_bar(data=final_PIT_df, aes(x=measures, fill=Indv_Family)) +
xlab("Family Size") +
ggtitle('Individuals Versus Families (2007-2016)')
view(Durham_PIT_df)
view(final_PIT_df)
ggplot(group_UMD_df, aes(x=Family_Size)) +
geom_bar(aes(fill=Family_Size)) +
xlab("Family Size") +
ggtitle('Counts by Family Size (2007-2016)')
ggplot(group_UMD_df, aes(x=Indv_Family), group = Indv_Family) +
geom_bar(aes(fill=Indv_Family)) +
xlab("Family Size") +
ggtitle('Individuals Versus Families (2007-2016)')
ggplot(family_size_group_UMD_df, aes(x=Year_of_Service, y=n, group=Family_Size)) +
geom_line(aes(color=Family_Size)) +
scale_x_discrete() +
xlab("Year_of_Service") +
ylab("Number Serviced") +
ggtitle('Total Number Serviced by Family Size by Year')
ggplot(Indv_Family_group_UMD_df, aes(x=Year_of_Service, y=n, group=Indv_Family)) +
geom_line(aes(color=Indv_Family)) +
scale_x_discrete() +
xlab("Year_of_Service") +
ylab("Number Serviced") +
ggtitle('Individual vs Family by Year')
unlink('Bios611/bios611-projects-fall-2019-mlfoste1/Project1/src/data/Final_UMD_df_cache', recursive = TRUE)
Indv_Family_group_UMD_df = inner_join(group_UMD_df, final_UMD_df, by = c("Client_File_Number" = "Client_File_Number"), suffix = c(".x", ".y")) %>%
mutate(Year_of_Service = format(Date_of_service, "%Y")) %>%
group_by(Indv_Family, Year_of_Service) %>%
summarise(n=n_distinct(Client_File_Number))
```{r}
renderPlot({
ggplot(Indv_Family_group_UMD_df, aes(x=Year_of_Service, y=n, group=Indv_Family)) +
geom_line(aes(color=Indv_Family)) +
scale_x_discrete() +
xlab("Year_of_Service") +
ylab("Number Serviced") +
ggtitle('Individual vs Family by Year')
})
```{r}
renderPlot({
ggplot(Indv_Family_group_UMD_df, aes(x=Year_of_Service, y=n, group=Indv_Family)) +
geom_line(aes(color=Indv_Family)) +
scale_x_discrete() +
xlab("Year_of_Service") +
ylab("Number Serviced") +
ggtitle('Individual vs Family by Year')
})
```
```{r}
renderPlot({
ggplot(Indv_Family_group_UMD_df, aes(x=Year_of_Service, y=n, group=Indv_Family)) +
geom_line(aes(color=Indv_Family)) +
scale_x_discrete() +
xlab("Year_of_Service") +
ylab("Number Serviced") +
ggtitle('Individual vs Family by Year')
})
```
output$plot42 <- renderPlot({
client_plot2(input$client)
})
library(shiny)
library(tidyverse)
source("helper_functions.R",local = F)
ui <- navbarPage("Project 2",
tabPanel("Background",
fluidPage(
titlePanel("Background"),
sidebarLayout(
sidebarPanel(
"About the project"
),
mainPanel(
textOutput(outputId = "pre0"),
textOutput(outputId = "pre1"),
textOutput(outputId = "pre2"),
textOutput(outputId = "pre3"),
textOutput(outputId = "pre4")
)
)
)
),
tabPanel("Q1",
fluidPage(
titlePanel("Trend"),
sidebarLayout(
sidebarPanel(
h3(textOutput(outputId = "text1")),
# Input
selectInput("trend", label = h5("Select a variable"),
choices = list("People served" = "Food Provided for", "Food" = "Food Pounds",
"Clothes" = "Clothing Items", "Diapers" = "Diapers",
"Hygiene Kits" = "Hygiene Kits", "School Kits" = "School Kits",
"Financial Support" = "Financial Support"),
selected = 1),
# Output
textOutput("value1")
),
mainPanel(
plotOutput(outputId = "plot1")
)
)
)
),
tabPanel("Q2",
fluidPage(
titlePanel("Relationship"),
sidebarLayout(
sidebarPanel(
h3(textOutput(outputId = "text2")),
# Input
selectInput("relation", label = h5("Select a variable"),
choices = list("Food" = "Food Pounds",
"Clothes" = "Clothing Items"),
selected = 1),
# Output
textOutput("value2")
),
mainPanel(
plotOutput(outputId = "plot2")
)
)
)
),
tabPanel("Q3",
fluidPage(
titlePanel("Average Amounts"),
sidebarLayout(
sidebarPanel(
h3(textOutput(outputId = "text3")),
# Input
selectInput("average", label = h5("Select a variable"),
choices = list("Food" = "Food Pounds",
"Clothes" = "Clothing Items"),
selected = 1),
# Output
textOutput("value3")
),
mainPanel(
plotOutput(outputId = "plot3"),
textOutput(outputId = "text_avrg")
)
)
)
),
tabPanel("Q4",
fluidPage(
titlePanel("Specific Analysis"),
sidebarLayout(
sidebarPanel(
h3(textOutput(outputId = "text4")),
# Input
numericInput("client", label = h5("Input a client file number"), 3502),
# Output
textOutput(outputId = "value4")
),
mainPanel(
plotOutput(outputId = "plot41"),
plotOutput(outputId = "plot42")
)
)
)
)
)
server <- function(input, output) {
output$pre0 <- renderText("This project is a continuity of my project 1. I will focus on the four questions shown as below.")
output$pre1 <- renderText("1. The trend of the change for different variables that people choose over time (from 2005 till now).")
output$pre2 <- renderText("2. The relationships between number of people served and food pounds/clothing items. ")
output$pre3 <- renderText("3. The average amounts of food pounds/clothing items that per person served per visit need. ")
output$pre4 <- renderText("4. Specific analysis for individuals.")
output$text1 <- renderText("1. Show the trends of different variables over time")
output$value1 <- renderPrint({
paste("You have selected", input$trend)
})
output$plot1 <- renderPlot({
trend(input$trend)
})
output$text2 <- renderText("2. Show the potential relationships between different variables.")
output$value2 <- renderPrint({
paste("You have selected", input$relation)
})
output$plot2 <- renderPlot({
relation(input$relation)
})
output$text3 <- renderText("3. Show the average amount of food/clothes per person per visit getting.")
output$value3 <- renderPrint({
paste("You have selected", input$average)
})
output$plot3 <- renderPlot({
average_plot(input$average)
})
output$text_avrg <- renderText(paste("The average amount of ", input$average,
"from 2000 and from 2015 till now are", average_num(input$average)[1],
",", average_num(input$average)[2], ", respectively."))
output$text4 <- renderText("4. Specific analysis for individuals.")
output$value4 <- renderPrint({
client_check(input$client)
})
output$plot41 <- renderPlot({
client_plot1(input$client)
})
output$plot42 <- renderPlot({
client_plot2(input$client)
})
}
shinyApp(ui = ui, server = server)
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
shiny::runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
#Individuals Versus Families (2007-2016)
indv_fam_plot = ggplot(final_PIT_df, aes(x=Indv_Family, y=n)) +
geom_bar(stat="identity", aes(fill=Indv_Family)) +
xlab("Family Size") +
ggtitle('Durham PIT - Individuals Versus Families (2007-2016)')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
runApp('Bios611/bios611-projects-fall-2019-mlfoste1/Project_2')
